name: ci

on:
  push:
    branches: [ master ]

  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  sgx:
    strategy:
      matrix:
        version: [2.13.3, 2.14, 2.15.1, 2.16, 2.17.1, 2.18, 2.19]
        distro: [focal]
        dockerfile: [Dockerfile]
        image_name: [initc3/sgx]
        include:
          - version: 2.13.3
            distro: bionic
            dockerfile: Dockerfile
            image_name: initc3/sgx
          - version: 2.18
            distro: jammy
            dockerfile: Dockerfile
            image_name: initc3/sgx
          - version: 2.19
            distro: jammy
            dockerfile: Dockerfile
            image_name: initc3/sgx
          - version: 2.19
            distro: buster
            dockerfile: Dockerfile
            image_name: initc3/sgx
          - version: 2.19
            distro: buster
            dockerfile: aesm.Dockerfile
            image_name: initc3/sgx-aesm
        exclude:
          - version: 2.19
            distro: focal

    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set Short SHA
        id: vars
        run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      -
        name: Build docker image for SGX SDK & PSW ${{ matrix.version }} ${{ matrix.distro }}
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./${{ matrix.version }}/${{ matrix.distro }}/${{ matrix.dockerfile }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ matrix.image_name }}:${{ matrix.version }}-${{ matrix.distro }}
            ${{ env.REGISTRY }}/${{ matrix.image_name }}:${{ matrix.version }}-${{ matrix.distro }}-${{ steps.vars.outputs.short_sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
